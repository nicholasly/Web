var fs = require("fs");
var path = require("path");
var config = require("./config");
var pinyin = require("./../utils/pinyin");
var dir = require("./../utils/dir");

var configPath = config.get("root") + path.sep + '.config';
var taskConfigFile = configPath + path.sep + 'task';

function preZero(num){
	if(num < 10){
	   return "0" + num;
	}else{
		return num;
	}
}

exports = module.exports = {
	
	create : function(taskname){
		var folder = pinyin(taskname);
		var root = config.get('root');
		var now = new Date();
		var taskPath = path.sep + now.getFullYear() + preZero(now.getMonth()+1) + path.sep + folder;
		var abspath = root + taskPath;
		if(fs.existsSync(abspath)){
			return "DIREXIST";
		}else{
			dir.create(abspath);
			
			this.register(taskPath);
			
			this.init(taskPath,taskname);
			
			return "SUCCESS";
		}
	},
	register : function(_path){
		var taskObj;
		if(fs.existsSync(taskConfigFile)){
			taskObj = JSON.parse(fs.readFileSync(taskConfigFile));
			taskObj.currentTasks.push(_path);
		}else{
			taskObj = {};
			taskObj.currentTasks = [_path];
			dir.create(configPath);
		}
		fs.writeFileSync(taskConfigFile,JSON.stringify(taskObj));		   
	},
	getDetail : function(_path){
		var thisconfigFile = config.get('root') + _path + path.sep + ".task";
		return JSON.parse(fs.readFileSync(thisconfigFile));
	},
	init : function(_path,taskname){
		var taskFile = config.get("root") + _path + path.sep + ".task";
		console.log(taskFile);
		var task = {};
		task.taskname = taskname;
		task.status = "continue";
		task.assets = [];
		task.demo = [];

		fs.writeFileSync(taskFile,JSON.stringify(task));
	},
	getCurrentList : function(){
		var currentTasks = [];
		if(fs.existsSync(taskConfigFile)){
			currentTasks = JSON.parse(fs.readFileSync(taskConfigFile)).currentTasks || [];
		}else{
			console.log('configfilenotexist');
		}

		var tasks = [];
		for(var i = currentTasks.length-1; i>=0; i--){
			tasks.push({
				path : currentTasks[i],
				detail : JSON.parse(fs.readFileSync(config.get('root')+currentTasks[i]+path.sep+'.task'))
			});
		};
		return tasks;
	},
	getAll : function(){
		var taskPaths = [], tasks = [];
		var root = config.get('root');
		var months = fs.readdirSync(root);
		for(m in months){
			if(/\d{6}/.test(months[m])){
				var ts = fs.readdirSync(root + path.sep + months[m]);
				for(t in ts){
					taskPaths.push(path.sep + months[m] + path.sep + ts[t])
				}
			}
		}
		for(task in taskPaths){
			tasks.push({
				path : taskPaths[task],
				detail : JSON.parse(fs.readFileSync(root+taskPaths[task]+path.sep+'.task'))
			})
		}
		return tasks
	}
}
